group 'test-framework'
version '1.0-SNAPSHOT'
description 'Example of testing framework in java for UI and API'

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        jcenter()
    }
    dependencies {
        classpath "gradle.plugin.com.github.opengl-8080:assertjGen-gradle-plugin:1.1.4"
        classpath 'org.jsonschema2pojo:jsonschema2pojo-gradle-plugin:0.4.35'
    }
}

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'com.github.opengl-BOBO.assertjGen'
apply plugin: 'jsonschema2pojo'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
}

jacoco {
    toolVersion = '0.7.6.201602180812'
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

test {
    ignoreFailures = true
    testLogging.exceptionFormat = 'full'
    testLogging {
        events "passed", "skipped", "failed"
    }
    systemProperties System.properties
}

task codeCoverageReport(type: JacocoReport, dependsOn: ['test']) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    projects.each {
        sourceSets.main
    }

    reports {
        xml.enabled true
        xml.destination "${buildDir}/reports/jacoco/report.xml"
        html.enabled false
        csv.enabled false
    }
}

dependencies {
    compile(
            ['io.rest-assured:rest-assured:3.0.3'],
            ['commons-lang:commons-lang:2.6'],
            ['joda-time:joda-time:2.2'],
            ['org.aeonbits.owner:owner:1.0.9'],
            ['org.jsonschema2pojo:jsonschema2pojo-core:0.4.37'],
            ['org.apache.httpcomponents:httpclient:4.5.2']
    )
    testCompile(
            [group: 'junit', name: 'junit', version: '4.12'],
            ['org.assertj:assertj-core:3.8.0'],
            ['org.assertj:assertj-assertions-generator-maven-plugin:2.0.0']
    )
    compileOnly(
            ['org.projectlombok:lombok:1.16.16'],
    )
}

task wrapper(type: Wrapper) {
    gradleVersion '4.0'
}

assertjGen {
    classOrPackageNames = ['api.beans']
    outputDir = 'src/test/java/matchers'
}

jsonSchema2Pojo {
    source = files("${sourceSets.main.output.resourcesDir}/responses")
    targetDirectory = file("${project.buildDir}/generated-sources/js2p")
    sourceType = 'json'
    removeOldOutput = false
    includeConstructors = true
    useLongIntegers = false
    includeAccessors = true
    includeToString = true
}